// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: descriptor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumStoredAs int32

const (
	EnumStoredAs_ENUM_STORED_AS_INT    EnumStoredAs = 0
	EnumStoredAs_ENUM_STORED_AS_STRING EnumStoredAs = 1
)

// Enum value maps for EnumStoredAs.
var (
	EnumStoredAs_name = map[int32]string{
		0: "ENUM_STORED_AS_INT",
		1: "ENUM_STORED_AS_STRING",
	}
	EnumStoredAs_value = map[string]int32{
		"ENUM_STORED_AS_INT":    0,
		"ENUM_STORED_AS_STRING": 1,
	}
)

func (x EnumStoredAs) Enum() *EnumStoredAs {
	p := new(EnumStoredAs)
	*p = x
	return p
}

func (x EnumStoredAs) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumStoredAs) Descriptor() protoreflect.EnumDescriptor {
	return file_descriptor_proto_enumTypes[0].Descriptor()
}

func (EnumStoredAs) Type() protoreflect.EnumType {
	return &file_descriptor_proto_enumTypes[0]
}

func (x EnumStoredAs) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumStoredAs.Descriptor instead.
func (EnumStoredAs) EnumDescriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{0}
}

type Constraint int32

const (
	Constraint_CONSTRAINT_NOT_NULL    Constraint = 0 // NOT NULL constraint
	Constraint_CONSTRAINT_UNIQUE      Constraint = 1 // UNIQUE constraint
	Constraint_CONSTRAINT_PRIMARY_KEY Constraint = 2 // PRIMARY KEY constraint
	Constraint_CONSTRAINT_FOREIGN_KEY Constraint = 3 // FOREIGN KEY constraint
	Constraint_CONSTRAINT_CHECK       Constraint = 4 // CHECK constraint
	Constraint_CONSTRAINT_DEFAULT     Constraint = 5 // DEFAULT value constraint
)

// Enum value maps for Constraint.
var (
	Constraint_name = map[int32]string{
		0: "CONSTRAINT_NOT_NULL",
		1: "CONSTRAINT_UNIQUE",
		2: "CONSTRAINT_PRIMARY_KEY",
		3: "CONSTRAINT_FOREIGN_KEY",
		4: "CONSTRAINT_CHECK",
		5: "CONSTRAINT_DEFAULT",
	}
	Constraint_value = map[string]int32{
		"CONSTRAINT_NOT_NULL":    0,
		"CONSTRAINT_UNIQUE":      1,
		"CONSTRAINT_PRIMARY_KEY": 2,
		"CONSTRAINT_FOREIGN_KEY": 3,
		"CONSTRAINT_CHECK":       4,
		"CONSTRAINT_DEFAULT":     5,
	}
)

func (x Constraint) Enum() *Constraint {
	p := new(Constraint)
	*p = x
	return p
}

func (x Constraint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Constraint) Descriptor() protoreflect.EnumDescriptor {
	return file_descriptor_proto_enumTypes[1].Descriptor()
}

func (Constraint) Type() protoreflect.EnumType {
	return &file_descriptor_proto_enumTypes[1]
}

func (x Constraint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Constraint.Descriptor instead.
func (Constraint) EnumDescriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{1}
}

type Relation int32

const (
	Relation_RELATION_ONE_TO_ONE   Relation = 0
	Relation_RELATION_ONE_TO_MANY  Relation = 1
	Relation_RELATION_MANY_TO_ONE  Relation = 2
	Relation_RELATION_MANY_TO_MANY Relation = 3
)

// Enum value maps for Relation.
var (
	Relation_name = map[int32]string{
		0: "RELATION_ONE_TO_ONE",
		1: "RELATION_ONE_TO_MANY",
		2: "RELATION_MANY_TO_ONE",
		3: "RELATION_MANY_TO_MANY",
	}
	Relation_value = map[string]int32{
		"RELATION_ONE_TO_ONE":   0,
		"RELATION_ONE_TO_MANY":  1,
		"RELATION_MANY_TO_ONE":  2,
		"RELATION_MANY_TO_MANY": 3,
	}
)

func (x Relation) Enum() *Relation {
	p := new(Relation)
	*p = x
	return p
}

func (x Relation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Relation) Descriptor() protoreflect.EnumDescriptor {
	return file_descriptor_proto_enumTypes[2].Descriptor()
}

func (Relation) Type() protoreflect.EnumType {
	return &file_descriptor_proto_enumTypes[2]
}

func (x Relation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Relation.Descriptor instead.
func (Relation) EnumDescriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{2}
}

type Transaction_Level int32

const (
	Transaction_READ_UNCOMMITTED Transaction_Level = 0
	Transaction_READ_COMMITTED   Transaction_Level = 1
	Transaction_REPEATABLE_READ  Transaction_Level = 2
	Transaction_SERIALIZABLE     Transaction_Level = 3
)

// Enum value maps for Transaction_Level.
var (
	Transaction_Level_name = map[int32]string{
		0: "READ_UNCOMMITTED",
		1: "READ_COMMITTED",
		2: "REPEATABLE_READ",
		3: "SERIALIZABLE",
	}
	Transaction_Level_value = map[string]int32{
		"READ_UNCOMMITTED": 0,
		"READ_COMMITTED":   1,
		"REPEATABLE_READ":  2,
		"SERIALIZABLE":     3,
	}
)

func (x Transaction_Level) Enum() *Transaction_Level {
	p := new(Transaction_Level)
	*p = x
	return p
}

func (x Transaction_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_descriptor_proto_enumTypes[3].Descriptor()
}

func (Transaction_Level) Type() protoreflect.EnumType {
	return &file_descriptor_proto_enumTypes[3]
}

func (x Transaction_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_Level.Descriptor instead.
func (Transaction_Level) EnumDescriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{10, 0}
}

type IntType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial *bool `protobuf:"varint,1,opt,name=serial,proto3,oneof" json:"serial,omitempty"`
}

func (x *IntType) Reset() {
	*x = IntType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntType) ProtoMessage() {}

func (x *IntType) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntType.ProtoReflect.Descriptor instead.
func (*IntType) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{0}
}

func (x *IntType) GetSerial() bool {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return false
}

type CharType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size   *uint64 `protobuf:"varint,1,opt,name=size,proto3,oneof" json:"size,omitempty"`
	IsUuid *bool   `protobuf:"varint,2,opt,name=is_uuid,json=isUuid,proto3,oneof" json:"is_uuid,omitempty"`
}

func (x *CharType) Reset() {
	*x = CharType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharType) ProtoMessage() {}

func (x *CharType) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharType.ProtoReflect.Descriptor instead.
func (*CharType) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{1}
}

func (x *CharType) GetSize() uint64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *CharType) GetIsUuid() bool {
	if x != nil && x.IsUuid != nil {
		return *x.IsUuid
	}
	return false
}

type TimeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithTimeZone *bool `protobuf:"varint,1,opt,name=with_time_zone,json=withTimeZone,proto3,oneof" json:"with_time_zone,omitempty"`
}

func (x *TimeType) Reset() {
	*x = TimeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeType) ProtoMessage() {}

func (x *TimeType) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeType.ProtoReflect.Descriptor instead.
func (*TimeType) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{2}
}

func (x *TimeType) GetWithTimeZone() bool {
	if x != nil && x.WithTimeZone != nil {
		return *x.WithTimeZone
	}
	return false
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional ColumnTyped column_type = 2;
	// repeated Constraint constraints = 3;
	// optional Relation relation_type = 4;
	Constraints []Constraint `protobuf:"varint,1,rep,packed,name=constraints,proto3,enum=gopgx.Constraint" json:"constraints,omitempty"`
	Relation    Relation     `protobuf:"varint,2,opt,name=relation,proto3,enum=gopgx.Relation" json:"relation,omitempty"`
	// Types that are assignable to Type:
	//
	//	*Column_IntType
	//	*Column_CharType
	//	*Column_TimeType
	Type isColumn_Type `protobuf_oneof:"type"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{3}
}

func (x *Column) GetConstraints() []Constraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

func (x *Column) GetRelation() Relation {
	if x != nil {
		return x.Relation
	}
	return Relation_RELATION_ONE_TO_ONE
}

func (m *Column) GetType() isColumn_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Column) GetIntType() *IntType {
	if x, ok := x.GetType().(*Column_IntType); ok {
		return x.IntType
	}
	return nil
}

func (x *Column) GetCharType() *CharType {
	if x, ok := x.GetType().(*Column_CharType); ok {
		return x.CharType
	}
	return nil
}

func (x *Column) GetTimeType() *TimeType {
	if x, ok := x.GetType().(*Column_TimeType); ok {
		return x.TimeType
	}
	return nil
}

type isColumn_Type interface {
	isColumn_Type()
}

type Column_IntType struct {
	IntType *IntType `protobuf:"bytes,3,opt,name=int_type,json=intType,proto3,oneof"`
}

type Column_CharType struct {
	CharType *CharType `protobuf:"bytes,4,opt,name=char_type,json=charType,proto3,oneof"`
}

type Column_TimeType struct {
	TimeType *TimeType `protobuf:"bytes,5,opt,name=time_type,json=timeType,proto3,oneof"`
}

func (*Column_IntType) isColumn_Type() {}

func (*Column_CharType) isColumn_Type() {}

func (*Column_TimeType) isColumn_Type() {}

type SchemaOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Annotations []string `protobuf:"bytes,3,rep,name=annotations,proto3" json:"annotations,omitempty"`
}

func (x *SchemaOption) Reset() {
	*x = SchemaOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemaOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaOption) ProtoMessage() {}

func (x *SchemaOption) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaOption.ProtoReflect.Descriptor instead.
func (*SchemaOption) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{4}
}

func (x *SchemaOption) GetAnnotations() []string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

type CommonQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sql  string `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
}

func (x *CommonQuery) Reset() {
	*x = CommonQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonQuery) ProtoMessage() {}

func (x *CommonQuery) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonQuery.ProtoReflect.Descriptor instead.
func (*CommonQuery) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{5}
}

func (x *CommonQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommonQuery) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

type CommonQueries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []*CommonQuery `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *CommonQueries) Reset() {
	*x = CommonQueries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonQueries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonQueries) ProtoMessage() {}

func (x *CommonQueries) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonQueries.ProtoReflect.Descriptor instead.
func (*CommonQueries) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{6}
}

func (x *CommonQueries) GetQueries() []*CommonQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{7}
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{8}
}

type MethodQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//
	//	*MethodQuery_Sql
	//	*MethodQuery_Ref
	Query isMethodQuery_Query `protobuf_oneof:"query"`
}

func (x *MethodQuery) Reset() {
	*x = MethodQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MethodQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodQuery) ProtoMessage() {}

func (x *MethodQuery) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodQuery.ProtoReflect.Descriptor instead.
func (*MethodQuery) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{9}
}

func (m *MethodQuery) GetQuery() isMethodQuery_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *MethodQuery) GetSql() string {
	if x, ok := x.GetQuery().(*MethodQuery_Sql); ok {
		return x.Sql
	}
	return ""
}

func (x *MethodQuery) GetRef() string {
	if x, ok := x.GetQuery().(*MethodQuery_Ref); ok {
		return x.Ref
	}
	return ""
}

type isMethodQuery_Query interface {
	isMethodQuery_Query()
}

type MethodQuery_Sql struct {
	Sql string `protobuf:"bytes,1,opt,name=sql,proto3,oneof"`
}

type MethodQuery_Ref struct {
	Ref string `protobuf:"bytes,2,opt,name=ref,proto3,oneof"`
}

func (*MethodQuery_Sql) isMethodQuery_Query() {}

func (*MethodQuery_Ref) isMethodQuery_Query() {}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuerySet []*MethodQuery     `protobuf:"bytes,1,rep,name=query_set,json=querySet,proto3" json:"query_set,omitempty"`
	Level    *Transaction_Level `protobuf:"varint,2,opt,name=level,proto3,enum=gopgx.Transaction_Level,oneof" json:"level,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{10}
}

func (x *Transaction) GetQuerySet() []*MethodQuery {
	if x != nil {
		return x.QuerySet
	}
	return nil
}

func (x *Transaction) GetLevel() Transaction_Level {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return Transaction_READ_UNCOMMITTED
}

type ServiceMethodExec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Exec:
	//
	//	*ServiceMethodExec_Query
	//	*ServiceMethodExec_Transaction
	Exec isServiceMethodExec_Exec `protobuf_oneof:"exec"`
}

func (x *ServiceMethodExec) Reset() {
	*x = ServiceMethodExec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMethodExec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMethodExec) ProtoMessage() {}

func (x *ServiceMethodExec) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMethodExec.ProtoReflect.Descriptor instead.
func (*ServiceMethodExec) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{11}
}

func (m *ServiceMethodExec) GetExec() isServiceMethodExec_Exec {
	if m != nil {
		return m.Exec
	}
	return nil
}

func (x *ServiceMethodExec) GetQuery() *MethodQuery {
	if x, ok := x.GetExec().(*ServiceMethodExec_Query); ok {
		return x.Query
	}
	return nil
}

func (x *ServiceMethodExec) GetTransaction() *Transaction {
	if x, ok := x.GetExec().(*ServiceMethodExec_Transaction); ok {
		return x.Transaction
	}
	return nil
}

type isServiceMethodExec_Exec interface {
	isServiceMethodExec_Exec()
}

type ServiceMethodExec_Query struct {
	Query *MethodQuery `protobuf:"bytes,1,opt,name=query,proto3,oneof"`
}

type ServiceMethodExec_Transaction struct {
	Transaction *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3,oneof"`
}

func (*ServiceMethodExec_Query) isServiceMethodExec_Exec() {}

func (*ServiceMethodExec_Transaction) isServiceMethodExec_Exec() {}

type FileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonQueries *CommonQueries `protobuf:"bytes,1000,opt,name=common_queries,json=commonQueries,proto3" json:"common_queries,omitempty"`
	Version       string         `protobuf:"bytes,1001,opt,name=version,proto3" json:"version,omitempty"`
	Name          string         `protobuf:"bytes,1002,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FileOptions) Reset() {
	*x = FileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_descriptor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOptions) ProtoMessage() {}

func (x *FileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_descriptor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOptions.ProtoReflect.Descriptor instead.
func (*FileOptions) Descriptor() ([]byte, []int) {
	return file_descriptor_proto_rawDescGZIP(), []int{12}
}

func (x *FileOptions) GetCommonQueries() *CommonQueries {
	if x != nil {
		return x.CommonQueries
	}
	return nil
}

func (x *FileOptions) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *FileOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var file_descriptor_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*EnumStoredAs)(nil),
		Field:         1000,
		Name:          "gopgx.stored_as",
		Tag:           "varint,1000,opt,name=stored_as,enum=gopgx.EnumStoredAs",
		Filename:      "descriptor.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*SchemaOption)(nil),
		Field:         1000,
		Name:          "gopgx.schema",
		Tag:           "bytes,1000,opt,name=schema",
		Filename:      "descriptor.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Column)(nil),
		Field:         1000,
		Name:          "gopgx.column",
		Tag:           "bytes,1000,opt,name=column",
		Filename:      "descriptor.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*ServiceMethodExec)(nil),
		Field:         1000,
		Name:          "gopgx.exec",
		Tag:           "bytes,1000,opt,name=exec",
		Filename:      "descriptor.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*FileOptions)(nil),
		Field:         1000,
		Name:          "gopgx.file_options",
		Tag:           "bytes,1000,opt,name=file_options",
		Filename:      "descriptor.proto",
	},
}

// Extension fields to descriptorpb.EnumOptions.
var (
	// optional gopgx.EnumStoredAs stored_as = 1000;
	E_StoredAs = &file_descriptor_proto_extTypes[0]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional gopgx.SchemaOption schema = 1000;
	E_Schema = &file_descriptor_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional gopgx.Column column = 1000;
	E_Column = &file_descriptor_proto_extTypes[2]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional gopgx.ServiceMethodExec exec = 1000;
	E_Exec = &file_descriptor_proto_extTypes[3]
)

// Extension fields to descriptorpb.FileOptions.
var (
	// optional gopgx.FileOptions file_options = 1000;
	E_FileOptions = &file_descriptor_proto_extTypes[4]
)

var File_descriptor_proto protoreflect.FileDescriptor

var file_descriptor_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x07, 0x49,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x56,
	0x0a, 0x08, 0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x06, 0x69, 0x73, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69,
	0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x29, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x77, 0x69,
	0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x22, 0xff, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x49, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x30, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x22, 0x3d, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x70, 0x67, 0x78, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x3e, 0x0a, 0x0b, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x71,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x12,
	0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xd7, 0x01, 0x0a, 0x0b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f,
	0x70, 0x67, 0x78, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x22, 0x58, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x50, 0x45, 0x41, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x45, 0x52,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x7f, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x70, 0x67,
	0x78, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x70, 0x67, 0x78, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x22, 0x7b, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xe9,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x13,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x2a, 0x41, 0x0a, 0x0c, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x64, 0x41, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x53, 0x54, 0x4f, 0x52,
	0x45, 0x44, 0x5f, 0x41, 0x53, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45,
	0x4e, 0x55, 0x4d, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x44, 0x5f, 0x41, 0x53, 0x5f, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x2a, 0xa2, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41,
	0x49, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x49,
	0x51, 0x55, 0x45, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41,
	0x49, 0x4e, 0x54, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x5f,
	0x46, 0x4f, 0x52, 0x45, 0x49, 0x47, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e,
	0x54, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x05, 0x2a, 0x72, 0x0a, 0x08, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x4c, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x4e, 0x45,
	0x5f, 0x54, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x4f,
	0x4e, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x54, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x10, 0x03, 0x3a,
	0x4f, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x12, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x41, 0x73, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41, 0x73,
	0x3a, 0x4d, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x3a,
	0x45, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x3a, 0x4d, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x12, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x70, 0x67, 0x78, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x45, 0x78, 0x65, 0x63, 0x52,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x3a, 0x54, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x70,
	0x67, 0x78, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b,
	0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_descriptor_proto_rawDescOnce sync.Once
	file_descriptor_proto_rawDescData = file_descriptor_proto_rawDesc
)

func file_descriptor_proto_rawDescGZIP() []byte {
	file_descriptor_proto_rawDescOnce.Do(func() {
		file_descriptor_proto_rawDescData = protoimpl.X.CompressGZIP(file_descriptor_proto_rawDescData)
	})
	return file_descriptor_proto_rawDescData
}

var file_descriptor_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_descriptor_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_descriptor_proto_goTypes = []interface{}{
	(EnumStoredAs)(0),                   // 0: gopgx.EnumStoredAs
	(Constraint)(0),                     // 1: gopgx.Constraint
	(Relation)(0),                       // 2: gopgx.Relation
	(Transaction_Level)(0),              // 3: gopgx.Transaction.Level
	(*IntType)(nil),                     // 4: gopgx.IntType
	(*CharType)(nil),                    // 5: gopgx.CharType
	(*TimeType)(nil),                    // 6: gopgx.TimeType
	(*Column)(nil),                      // 7: gopgx.Column
	(*SchemaOption)(nil),                // 8: gopgx.SchemaOption
	(*CommonQuery)(nil),                 // 9: gopgx.CommonQuery
	(*CommonQueries)(nil),               // 10: gopgx.CommonQueries
	(*Result)(nil),                      // 11: gopgx.Result
	(*Query)(nil),                       // 12: gopgx.Query
	(*MethodQuery)(nil),                 // 13: gopgx.MethodQuery
	(*Transaction)(nil),                 // 14: gopgx.Transaction
	(*ServiceMethodExec)(nil),           // 15: gopgx.ServiceMethodExec
	(*FileOptions)(nil),                 // 16: gopgx.FileOptions
	(*descriptorpb.EnumOptions)(nil),    // 17: google.protobuf.EnumOptions
	(*descriptorpb.MessageOptions)(nil), // 18: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 19: google.protobuf.FieldOptions
	(*descriptorpb.MethodOptions)(nil),  // 20: google.protobuf.MethodOptions
	(*descriptorpb.FileOptions)(nil),    // 21: google.protobuf.FileOptions
}
var file_descriptor_proto_depIdxs = []int32{
	1,  // 0: gopgx.Column.constraints:type_name -> gopgx.Constraint
	2,  // 1: gopgx.Column.relation:type_name -> gopgx.Relation
	4,  // 2: gopgx.Column.int_type:type_name -> gopgx.IntType
	5,  // 3: gopgx.Column.char_type:type_name -> gopgx.CharType
	6,  // 4: gopgx.Column.time_type:type_name -> gopgx.TimeType
	9,  // 5: gopgx.CommonQueries.queries:type_name -> gopgx.CommonQuery
	13, // 6: gopgx.Transaction.query_set:type_name -> gopgx.MethodQuery
	3,  // 7: gopgx.Transaction.level:type_name -> gopgx.Transaction.Level
	13, // 8: gopgx.ServiceMethodExec.query:type_name -> gopgx.MethodQuery
	14, // 9: gopgx.ServiceMethodExec.transaction:type_name -> gopgx.Transaction
	10, // 10: gopgx.FileOptions.common_queries:type_name -> gopgx.CommonQueries
	17, // 11: gopgx.stored_as:extendee -> google.protobuf.EnumOptions
	18, // 12: gopgx.schema:extendee -> google.protobuf.MessageOptions
	19, // 13: gopgx.column:extendee -> google.protobuf.FieldOptions
	20, // 14: gopgx.exec:extendee -> google.protobuf.MethodOptions
	21, // 15: gopgx.file_options:extendee -> google.protobuf.FileOptions
	0,  // 16: gopgx.stored_as:type_name -> gopgx.EnumStoredAs
	8,  // 17: gopgx.schema:type_name -> gopgx.SchemaOption
	7,  // 18: gopgx.column:type_name -> gopgx.Column
	15, // 19: gopgx.exec:type_name -> gopgx.ServiceMethodExec
	16, // 20: gopgx.file_options:type_name -> gopgx.FileOptions
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	16, // [16:21] is the sub-list for extension type_name
	11, // [11:16] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_descriptor_proto_init() }
func file_descriptor_proto_init() {
	if File_descriptor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_descriptor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemaOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonQueries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MethodQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMethodExec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_descriptor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_descriptor_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_descriptor_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_descriptor_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_descriptor_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Column_IntType)(nil),
		(*Column_CharType)(nil),
		(*Column_TimeType)(nil),
	}
	file_descriptor_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*MethodQuery_Sql)(nil),
		(*MethodQuery_Ref)(nil),
	}
	file_descriptor_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_descriptor_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ServiceMethodExec_Query)(nil),
		(*ServiceMethodExec_Transaction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_descriptor_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 5,
			NumServices:   0,
		},
		GoTypes:           file_descriptor_proto_goTypes,
		DependencyIndexes: file_descriptor_proto_depIdxs,
		EnumInfos:         file_descriptor_proto_enumTypes,
		MessageInfos:      file_descriptor_proto_msgTypes,
		ExtensionInfos:    file_descriptor_proto_extTypes,
	}.Build()
	File_descriptor_proto = out.File
	file_descriptor_proto_rawDesc = nil
	file_descriptor_proto_goTypes = nil
	file_descriptor_proto_depIdxs = nil
}
